<%= render 'layouts/application' %>
<div class="content inner-page">
  <div class="content-down"></div>
  <div class="container" ng-app="staffAPP" ng-controller="staffController">
    <% flash.each do |name, msg| %>
    <div class="">
      <h4 align="center" class="flash"><%= content_tag :div, msg, :id => "flash_#{name}" %>
      </h4>
    </div>
    <% end %>
    <div class="row">
      <h4><span><%= image_tag("line.png" , :alt => 'line.png') %></span>New Employee Page<span><!-- <img src="img/right.png"> -->
      <%= image_tag("right.png" , :alt => 'right.png') %>
    </span></h4>
    <%#= debug @qualifications %>
    
    <%= form_tag '/add_staff/create', { :multipart => true, :class => 'form-horizontal add-employee', :id => 'addStaff', :name => "addStaff"} do %>
    <div class="form-group">
      <div class="col-lg-6">
        <%= label_tag :first_name, 'First Name', :class => "control-label col-sm-3" %>
        <div class="col-sm-9"  ng-class="{'has-error': addStaff.first_name.$invalid && addStaff.first_name.$dirty}">
           <input type = "text" class = "form-control" id = "first_name" name="first_name" ng-model="staff.first_name" placeholder = "Enter First Name" required="required">
           <span>
            <i class="fa fa-check" ng-show="!addStaff.first_name.$invalid && addStaff.first_name.$dirty">
            </i> 
            <i class="fa fa-times" ng-show="addStaff.first_name.$invalid && addStaff.first_name.$dirty"></i>
          </span>
        </div>
      </div>
      <div class="col-lg-6">
        <%= label_tag :last_name, 'Last Name', :class => "control-label col-sm-3", :required => 'required' %>
        <div class="col-sm-9" ng-class="{'has-error': addStaff.last_name.$invalid && addStaff.last_name.$dirty}">
          <%#= text_field_tag :last_name, nil, :class => 'form-control', :placeholder => 'Enter Last Name', :required => 'required' %>
          <input type = "text" class = "form-control" id = "last_name" name="last_name" ng-model="staff.last_name" placeholder = "Enter Last Name" required="required">
           <span>
            <i class="fa fa-check" ng-show="!addStaff.last_name.$invalid && addStaff.last_name.$dirty">
            </i> 
            <i class="fa fa-times" ng-show="addStaff.last_name.$invalid && addStaff.last_name.$dirty"></i>
          </span>
        </div>
      </div>
    </div>
    
    <div class="form-group">
      <div class="col-lg-6">
        <%= label_tag :email, 'Email', :class => "control-label col-sm-3" %>
        <div class="col-sm-9" ng-class="{'has-error': addStaff.email.$invalid && addStaff.email.$dirty}">
          <%#= email_field_tag :email, nil, class:'form-control', :placeholder => 'Enter Email', :required => 'required' %>
          <input type = "email" class = "form-control" id = "email" name="email" ng-model="staff.email" placeholder = "Enter Email" required="required" ng-keyup="checkEmail()">
          <span class="edit-staff-down-msg" align="center" class="flash" ng-if="errMsg" ng-bind="errMsg"></span>
          <span>
           <span>
            <i class="fa fa-check" ng-show="!staff.email.$invalid && staff.email.$dirty && !duplicateEmail">
            </i> 
            <i class="fa fa-times" ng-show="(staff.email.$invalid && staff.email.$dirty) || duplicateEmail"></i>
          </span>
        </div>
      </div>
      <div class="col-lg-6" ng-class="{'has-error': addStaff.skills.$invalid && addStaff.skills.$dirty}">
        <%= label_tag :skills, 'Skills', :class => "control-label col-sm-3" %>
        <div class="col-sm-9">
          <%#= text_field_tag :skills, nil, class:'form-control', :id =>'skilsComplete', :placeholder => 'Enter Skills', :required => 'required'   %>
          <input type = "text" class = "form-control" id = "skilsComplete" name="skills" ng-model="staff.skills" placeholder = "Enter Skills" required="required">
           <span>
            <i class="fa fa-check" ng-show="skillsValid">
            </i> 
            <i class="fa fa-times" ng-show="!skillsValid"></i>
          </span>
          <!-- <a href="javascript:void(0)" style="float: right;margin: 0px;" class="add_more">+Add more</a> -->
        </div>
      </div>
    </div>
    
    <div class="form-group">
      <div class="col-lg-6" >
        <%= label_tag :availability, 'Availability', :class => "control-label col-sm-3" %>
        <div class="col-sm-9" ng-class="{'has-error': addStaff.availability.$invalid && addStaff.availability.$dirty}">
          <%#= text_field_tag :availability, nil, class:'form-control', :placeholder => 'Enter Availability', :required => 'required' %>
          <input type = "text" class = "form-control" id = "availability" name="availability" ng-model="staff.availability" placeholder = "Enter Availability" required="required">
           <span>
            <i class="fa fa-check" ng-show="!addStaff.availability.$invalid && addStaff.availability.$dirty">
            </i> 
            <i class="fa fa-times" ng-show="addStaff.availability.$invalid && addStaff.availability.$dirty"></i>
          </span>
          <input type="hidden" name="availability_to" id="availability_to">
          <input type="hidden" name="availability_from" id="availability_from">
        </div>
      </div>
      <div class="col-lg-6">
        <%= label_tag :location, 'Location', :class => "control-label col-sm-3", :onFocus => "geolocate()" %>
        <div class="col-sm-9" ng-class="{'has-error': addStaff.location.$invalid && addStaff.location.$dirty}">
          <%#= text_field_tag :location, nil, class:'form-control', :placeholder => 'Enter Location', :required => 'required' %>
          <input type = "text" class = "form-control" id = "location" name="location" ng-model="staff.location" placeholder = "Enter Location" required="required">
           <span>
            <i class="fa fa-check" ng-show="!addStaff.location.$invalid && addStaff.location.$dirty">
            </i> 
            <i class="fa fa-times" ng-show="addStaff.location.$invalid && addStaff.location.$dirty"></i>
          </span>
        </div>
      </div>
    </div>
    
    <div class="form-group">
      <div class="col-lg-6">
        <%= label_tag :is_private, 'Is Private', :class => "control-label col-sm-3" %>
        <div class="col-sm-9" ng-class="{'has-error': addStaff.is_private.$invalid && addStaff.is_private.$dirty}">
          
          <select name="is_private" id="is_private" class="form-control" required="required" ng-model="staff.is_private">
            <option value="">Select </option>
            <option value="0" >No</option>
            <option value="1" >Yes</option>
          </select>
        </div>
      </div>
      <div class="col-lg-6">
        <%= label_tag :qualification, 'Qualification', :class => "control-label col-sm-3" %>
        <div class="col-sm-9"  ng-class="{'has-error': addStaff.qualification.$invalid && addStaff.qualification.$dirty}">
          <%#= text_field_tag :qualification, nil, class:'form-control', :placeholder => 'Enter Qualification', :required => 'required', :id =>'staffQualitication'  %>
          <select name ="qualification" class="form-control" required="required" ng-model="staff.qualification">
            <option value ="">Select</option>
            <% @qualifications.each do |quff| %>
            <option value ="<%= quff.qualification %>"><%= quff.qualification %></option>
            <% end %>
          </select>
        </div>
      </div>
    </div>
    <div class="form-group number">
      <div class="col-lg-6">
        <%= label_tag :staff_price, 'Price For Staff ($)', :class => "control-label col-sm-3" %>
        <div class="col-sm-9" ng-class="{'has-error': addStaff.staff_price.$invalid && addStaff.staff_price.$dirty}">
          <%#= text_field_tag :staff_price, nil, class:'form-control', :placeholder => 'Enter Staff Price', :required => 'required' %>
          <input type = "number" class = "form-control" id = "staff_price" name="staff_price" ng-model="staff.staff_price" placeholder = "Enter Price" required="required" min="1">
          
           <span>
            <i class="fa fa-check" ng-show="!addStaff.staff_price.$invalid && addStaff.staff_price.$dirty">
            </i> 
            <i class="fa fa-times" ng-show="addStaff.staff_price.$invalid && addStaff.staff_price.$dirty"></i>
          </span>
        </div>
      </div>
        <div class="col-lg-6">
        <%= label_tag :experience, 'Experience', :class => "control-label col-sm-3" %>
        <div class="col-sm-9" ng-class="{'has-error': addStaff.experience.$invalid && addStaff.experience.$dirty}">
          <%#= text_field_tag :experience, nil, class:'form-control', :placeholder => 'Enter Experience', :required => 'required' %>
          <select name ="experience" class="form-control" required="required" ng-model="staff.experience">
            <option value ="">Select</option>
            
            <option value ="1">1 years</option>
            <option value ="2">2 years</option>
            <option value ="3">3 years</option>
            <option value ="4">4 years</option>
            <option value ="5">5 years</option>
            <option value ="6">6 years</option>
            <option value ="7">7 years</option>
            <!-- <option value ="above 7">More then 7 year</option> -->
            
          </select>
        </div>
      </div>
    </div>
    <div class="form-group">
    
      <div class="col-lg-6">
        <%= label_tag :image, 'Upload Image', :class => "control-label col-sm-3" %>
        <div class="col-sm-9">
          <%= file_field_tag :image, class: 'form-control' %>
          <!-- <input type ="file" name="upload" > -->
        </div>
      </div>
    </div>
    
    <input type="hidden" name="company_id" ng-model="staff.company_id" value="<%= @current_user.id %>">
    <div class="form-group">
      <div class="col-lg-6">
        <label for="staff_price" class="control-label col-sm-3"></label>
        <%#= submit_tag "Add Staff", :class => 'btn btn-default col-sm-offset-2' %>
        <button type = "submit" ng-show="addStaff.$invalid || duplicateEmail" ng-disabled="addStaff.$invalid || duplicateEmail" class = "btn btn-default register">Fill all fields</button>
           <button type = "submit" ng-show="!addStaff.$invalid && !duplicateEmail" class = "btn btn-default register" >Add Staff</button>
        <%= link_to "Cancel", "/company_home", class: "btn btn-default" %>
      </div>
    </div>
    <% end %>
  </div>
</div>

</div>
<% finalArr = []
qualification = []
@qualifications.each do |quff|
qualification.push(quff.qualification)
end
%>
<% @staff_data.each do |staff| %>
<%#= debug staff %>
<% finalArr.push(staff.skill) %>
<% #@singlearr =  staff.skills.split(",")
#qualification.push(staff.qualification)
%>
<% #@singlearr.each do |arr|  %>

<% #end %>
<% end %>

<input type="hidden" id="hiddenComplete" value="<%= finalArr %>">
<input type="hidden" id="hiddenQua" value="<%= qualification %>">
<script type="text/javascript">
$(document).ready(function () {
  var autCompleteArr = [],
  autoQompleteQua = [];
  var autoCompleteData = $('#hiddenComplete').val()
  autoCompleteDataQua  = $('#hiddenQua').val()    ;
  
  if(autoCompleteData && autoCompleteData !='') {

    var newArr = autoCompleteData.split(',');
    $.each(newArr, function (index, value) {
      var newValue = value.replace(/[^a-z0-9\s]/gi, '');
      autCompleteArr.push(newValue);
    });
    
    var unique=autCompleteArr.filter(function(itm,i,a){
      return i==autCompleteArr.indexOf(itm);
    });

$('#skilsComplete').tagEditor({
      removeDuplicates:  true,
      autocomplete: {
      delay: 0, // show suggestions immediately
      position: { collision: 'flip' }, // automatic menu position up/down
      source: unique//['ActionScript', 'AppleScript', 'Asp', ... 'Python', 'Ruby']
    },
      forceLowercase: false,
      placeholder: 'Enter skills',
      onChange: function(field, editor, tags) {
         if(tags.length) {
          angular.element(document.querySelector('[ng-controller="staffController"]')).scope().skillsAdded('have_it');
         }else{
          angular.element(document.querySelector('[ng-controller="staffController"]')).scope().skillsAdded('not_have');
         }
    },
});

$(".autoComplete").autocomplete({
      source: unique
    });
}

if(autoCompleteDataQua && autoCompleteDataQua !='') {
    var newArrQua = autoCompleteDataQua.split(',');
    $.each(newArrQua, function (index, value) {
      var newValueQa = value.replace(/[^a-z0-9\s]/gi, '');
      autoQompleteQua.push(newValueQa);
    });
    
    var uniqueQa = autoQompleteQua.filter(function(itm,i,a){
      return i==autoQompleteQua.indexOf(itm);
    });

$("#staffQualitication").autocomplete({
    source: uniqueQa
    });
}

$(function() {
    var dateToday = new Date();
      $('#availability').daterangepicker({
        autoUpdateInput: false,
        minDate: dateToday,
        locale: {
            cancelLabel: 'Clear'
        }
    });

    $('#availability').on('apply.daterangepicker', function(ev, picker) {
        $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));
        var dateVal = picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY');
        angular.element(document.querySelector('[ng-controller="staffController"]')).scope().cahngeAvl(dateVal);
    });

    $('#availability').on('cancel.daterangepicker', function(ev, picker) {
        $(this).val('');
    });
});
$('#availability').change(function () {
  //alert($(this).val());
  var selectedDate = $(this).val().split('-'); 
  $('#availability_from').val(selectedDate[0]);
  $('#availability_to').val(selectedDate[1]);
  //console.log('selected dates are', selectedDate[0], selectedDate[1]);

});
});
</script>
<script>
var placeSearch, autocomplete;
function initAutocomplete() {
autocomplete = new google.maps.places.Autocomplete(
/** @type {!HTMLInputElement} */(document.getElementById('location')),
{types: ['geocode']});
// When the user selects an address from the dropdown, populate the address
// fields in the form.
}

function geolocate() {
  if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
      var geolocation = {
      lat: position.coords.latitude,
      lng: position.coords.longitude
  };
    var circle = new google.maps.Circle({
      center: geolocation,
      radius: position.coords.accuracy
    });
      autocomplete.setBounds(circle.getBounds());
    });
  }
}

(function($) {
    $.fn.checkFileType = function(options) {
        var defaults = {
            allowedExtensions: [],
            success: function() {},
            error: function() {}
        };
        options = $.extend(defaults, options);

        return this.each(function() {

            $(this).on('change', function() {
                var value = $(this).val(),
                    file = value.toLowerCase(),
                    extension = file.substring(file.lastIndexOf('.') + 1);

                if ($.inArray(extension, options.allowedExtensions) == -1) {
                    options.error();
                    $(this).focus();
                } else {
                    options.success();

                }

            });

        });
    };

})(jQuery);

$(function() {
    $('#image').checkFileType({
        allowedExtensions: ['jpg', 'jpeg', 'png', 'gif'],
        success: function() {
           // alert('Success');
        },
        error: function() {
            alert('Please select a valid image');
            $('#image').val('');
            return false;
        }
    });

});
// [END region_geolocation]
</script>
<style type="text/css">
/*.sweet-container {
display: none;
}*/
</style>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAaeRBXe6kIcRkaDZMMx9CbSvLgAXuSPAI&signed_in=true&libraries=places&callback=initAutocomplete"
async defer></script>
<%= render 'layouts/footer' %>